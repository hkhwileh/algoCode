# Python3 program to delete all
# the nodes of singly linked list

# Node class


class Node:

	# Function to initialise the node object
	def __init__(self, data):
		self.data = data # Assign data
		self.next = None # Initialize next as null


# Constructor to initialize the node object
class LinkedList:

	# Function to initialize head
	def __init__(self):
		self.head = None

	def deleteList(self):

		current = self.head
		while current:
			prev = current.next # move next node

			del current.data

			current = prev

		# In python garbage collection happens
		# therefore, only
		# self.head = None
		# would also delete the link list

	# push function to add node in front of llist
	def push(self, new_data):

		# Allocate the Node &
		# Put in the data
		new_node = Node(new_data)

		# Make next of new Node as head
		new_node.next = self.head

		# Move the head to point to new Node
		self.head = new_node
	    def get_position(self, position):
        current = self.head
        counter = 1
        if position < 1:
            return None
        while current and counter <= position:
            if counter==position:
                return current
            current= current.next
            counter +=1
        return None

    def get_position1(self, position):
        counter = 1
        current = self.head
        if position < 1:
            return None
        while current and counter <= position:
            if counter == position:
                return current
            current = current.next
            counter += 1
        return None

    def insert(self, new_element, position):
        """Insert a new node at the given position.
        Assume the first position is "1".
        Inserting at position 3 means between
        the 2nd and 3rd elements."""
        counter = 1
        current = self.head
        if position>1:
            while current and counter<=position:
                if position==counter:
                    new_element.next = self.head
                    self.head = new_element
                current = current.next
                counter +=1
        elif position==1:
            new_element.next = self.head
            self.head= new_element


# Use push() to construct below
# list 1-> 12-> 1-> 4-> 1
if __name__ == '__main__':

	llist = LinkedList()
	llist.push(1)
	llist.push(4)
	llist.push(1)
	llist.push(12)
	llist.push(1)

	print("Deleting linked list")
	llist.deleteList()

	print("Linked list deleted")



